<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-04-27T20:19:33-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">irek bulik</title><subtitle>quantum chemist turned qualitative strategist. from strong correlation in condensed matter and molecules in the outer space to financial markets. plan to write on random topics.</subtitle><entry><title type="html">first post</title><link href="http://localhost:4000/jekyll/update/2019/04/26/welcome-to-jekyll.html" rel="alternate" type="text/html" title="first post" /><published>2019-04-26T22:09:55-04:00</published><updated>2019-04-26T22:09:55-04:00</updated><id>http://localhost:4000/jekyll/update/2019/04/26/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2019/04/26/welcome-to-jekyll.html">&lt;p&gt;A story of interesting primes…&lt;/p&gt;

&lt;p&gt;(one day, the syntax will be highlighted)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-j&quot; data-lang=&quot;j&quot;&gt;NB. We define _xxx_ Prime as prime obtained by concatenation of nth Pascal Triangle row. 
NB. 
NB. Function to search for _xxx_ Primes. There first 3 are for n=1,8,29
NB. 11
NB. 18285670562881
NB. 1294063654237511187554750201560780429214510015005200300103459729051895935678639157755876077558760678639155189593534597290200300101001500542921451560780475020118755237513654406291
f =: 3 : '(0&amp;amp;,+,&amp;amp;0)^:y (1x)'
&quot;:@(1&amp;amp;p:)@&quot;.@,&amp;amp;'x'@(;@:(&amp;lt;@&quot;:&quot;0)@f)&quot;0 (&amp;gt;:i.30)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-j&quot; data-lang=&quot;j&quot;&gt;require 'dll'
NB. INIT PARI JUST ONCE

ini_p =. '$PATH_TO_PARI/pari/2.9.3/lib/libpari-gmp.dylib pari_init n  ' cd ''
ini_p

NB. PARI FACTORIZATION BY MY WRAPPER
fac_p =:  &amp;gt;@(0&amp;amp;{@:('libutils.dylib is_prime i  *c'&amp;amp;cd@&amp;lt;@&quot;:))

m_prime =. 1294063654237511187554750201560780429214510015005200300103459729051895935678639157755876077558760678639155189593534597290200300101001500542921451560780475020118755237513654406291x

NB. echo 'Time Pari  ' , (&quot;: (6!:2) 'fac_p m_prime') , 's'
NB. echo 'Time J ' , (&quot;: (6!:2) '1 p: m_prime') , 's'

f =: 3 : '(0&amp;amp;,+,&amp;amp;0)^:y (1x)'
pari_mp =: 3 : '&quot;:@(fac_p)@&quot;.@,&amp;amp;(120}a.)@(;@:(&amp;lt;@&quot;:&quot;0)@f)&quot;0 y'
NB. We can leave it in string form
pari_mp =: 3 : '&quot;:@(fac_p)@(;@:(&amp;lt;@&quot;:&quot;0)@f)&quot;0 y'
J_mp =: 3 : '&quot;:@(1&amp;amp;p:)@&quot;.@,&amp;amp;(120}a.)@(;@:(&amp;lt;@&quot;:&quot;0)@f)&quot;0 y'&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//g++ -dynamiclib -o libutils.dylib wrap.cpp -L/usr/local/Cellar/pari/2.9.3/lib -lpari-gmp&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;$PATH_TO_PARI/pari/2.9.3/include/pari/pari.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isprime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strtoi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">A story of interesting primes…</summary></entry></feed>